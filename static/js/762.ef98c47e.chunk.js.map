{"version":3,"file":"static/js/762.ef98c47e.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","components/MoviesForm/MovieForm.jsx","pages/Movies/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/movieAPI.js","services/status.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nconst MoviesList = ({ data, location }) => {\n  return (\n    <div>\n      <ul>\n        {data.map(movie => (\n          <Link\n            to={`/movies/${movie.id}`}\n            key={movie.id}\n            state={{ from: location }}\n          >\n            <li>{movie.original_title || movie.name}</li>\n          </Link>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import { useState } from 'react';\n\nconst MoviesPageComponent = ({ onHandleSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = e => {\n    if (e.currentTarget.value === '') return;\n    setQuery(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query === '') return;\n    onHandleSubmit(query);\n  };\n\n  return (\n    <>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" onChange={handleChange} />\n          <button type=\"submit\">Search</button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default MoviesPageComponent;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport MoviesPageComponent from 'components/MoviesForm/MovieForm';\nimport Status from 'services/status';\nimport { searchMovieByWord } from 'services/movieAPI';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryParams = searchParams.get('query');\n\n  const location = useLocation();\n\n  useEffect(() => {\n    queryParams !== null && setQuery(queryParams);\n    if (query === '') return;\n    setStatus(Status.PENDING);\n    searchMovieByWord(query).then(data => {\n      if (data.total_results === 0) {\n        setError('Movies matching your search were not found.');\n        setStatus(Status.REJECTED);\n        return;\n      }\n      setMovies(data.results);\n      setStatus(Status.RESOLVED);\n    });\n  }, [query, queryParams]);\n\n  const searchMovies = newQuery => {\n    if (query === newQuery) return;\n    setSearchParams({ query: newQuery });\n    setQuery(newQuery);\n    setMovies(null);\n    setError(null);\n    setStatus(Status.IDLE);\n  };\n  return (\n    <>\n      <MoviesPageComponent onHandleSubmit={searchMovies} value={query} />\n      {status === Status.REJECTED && <div>{error}</div>}\n      {status === Status.RESOLVED && (\n        <MoviesList data={movies} location={location} />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwNzc5YjU0M2FkZmRiNTI3NTRmNTM0Zjg4NzQwZWVhOSIsInN1YiI6IjY0NzM5NzZmZGQ3MzFiMmQ3YjY1ZDJmYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.6h-bjtxgs4nr94NSLdnPuJU9g--17ZpHDO_f_Ba8yfA',\n  },\n};\n\nexport async function getTrendingMovies() {\n  try {\n    const response = await fetch(\n      'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n      options\n    );\n    if (response.ok) {\n      return await response.json();\n    }\n    return Promise.reject(new Error(`There are no trending movies yet.`));\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n      options\n    );\n    if (response.ok) {\n      return await response.json();\n    }\n    return Promise.reject(new Error(`An error occurred during the request.`));\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nexport async function getMovieCast(movieId) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US&page=1`,\n      options\n    );\n    if (response.ok) {\n      return await response.json();\n    }\n    return Promise.reject(\n      new Error(`There is no information about the cast of this movie yet.`)\n    );\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n      options\n    );\n    if (response.ok) {\n      return await response.json();\n    }\n    return Promise.reject(new Error(`No one has left a review yet.`));\n  } catch (err) {\n    return console.error(err);\n  }\n}\n\nexport async function searchMovieByWord(query) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1'`,\n      options\n    );\n    if (response.ok) {\n      return await response.json();\n    }\n    return Promise.reject(\n      new Error(`Movies matching your search were not found.`)\n    );\n  } catch (err) {\n    return console.error(err);\n  }\n}\n","const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default Status;\n"],"names":["data","location","map","movie","to","id","state","from","original_title","name","onHandleSubmit","useState","query","setQuery","onSubmit","e","preventDefault","type","onChange","currentTarget","value","movies","setMovies","error","setError","Status","status","setStatus","useSearchParams","searchParams","setSearchParams","queryParams","get","useLocation","useEffect","searchMovieByWord","then","total_results","results","newQuery","MoviesList","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","options","method","headers","accept","Authorization","getTrendingMovies","fetch","response","ok","json","Error","console","getMovieDetails","movieId","getMovieCast","getMovieReviews","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}